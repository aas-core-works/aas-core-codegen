We do not know how to parse the AST node: ClassDef(name='Something', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Pass()], decorator_list=[Call(func=Attribute(value=Name(id='unknown_lib', ctx=Load()), attr='do_something', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=Compare(left=Name(id='x', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0, kind=None)]))], keywords=[])], returns=Constant(value=None, kind=None), type_comment=None)], decorator_list=[])
Unexpected non-name decorator of a method: 'unknown_lib.do_something'