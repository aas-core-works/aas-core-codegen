SymbolTable(
  symbols=[
    AbstractClass(
      name='Abstract',
      inheritances=[],
      inheritance_id_set=...,
      is_implementation_specific=False,
      interface=Interface(
        base='Reference to AbstractClass Abstract',
        name='Abstract',
        inheritances=[],
        implementers=[],
        properties=[],
        signatures=[
          Signature(
            name='some_func',
            arguments=[
              Argument(
                name='x',
                type_annotation=PrimitiveTypeAnnotation(
                  a_type='INT',
                  parsed=...),
                default=None,
                parsed=...)],
            returns=PrimitiveTypeAnnotation(
              a_type='BOOL',
              parsed=...),
            description=None,
            contracts=Contracts(
              preconditions=[
                Contract(
                  args=[
                    'x'],
                  description=None,
                  body="Comparison(\n  left=Name(\n    identifier='x',\n    original_node=...),\n  op='GT',\n  right=Constant(\n    value=0,\n    original_node=...),\n  original_node=...)",
                  parsed=...)],
              snapshots=[],
              postconditions=[]),
            parsed=...,
            arguments_by_name=...)],
        description=None,
        parsed=...,
        properties_by_name=...,
        property_id_set=...),
      descendant_id_set=...,
      concrete_descendants=[],
      properties=[],
      methods=[
        UnderstoodMethod(
          name='some_func',
          arguments=[
            Argument(
              name='x',
              type_annotation=PrimitiveTypeAnnotation(
                a_type='INT',
                parsed=...),
              default=None,
              parsed=...)],
          returns=PrimitiveTypeAnnotation(
            a_type='BOOL',
            parsed=...),
          description=None,
          contracts=Contracts(
            preconditions=[
              Contract(
                args=[
                  'x'],
                description=None,
                body="Comparison(\n  left=Name(\n    identifier='x',\n    original_node=...),\n  op='GT',\n  right=Constant(\n    value=0,\n    original_node=...),\n  original_node=...)",
                parsed=...)],
            snapshots=[],
            postconditions=[]),
          parsed=...,
          body=[],
          arguments_by_name=...)],
      constructor=Constructor(
        name='__init__',
        arguments=[],
        returns=None,
        description=None,
        contracts=Contracts(
          preconditions=[],
          snapshots=[],
          postconditions=[]),
        parsed=None,
        arguments_by_name=...,
        is_implementation_specific=False,
        statements=[]),
      invariants=[],
      serialization=Serialization(
        with_model_type=False),
      description=None,
      parsed=...,
      properties_by_name=...,
      property_id_set=...,
      methods_by_name=...,
      invariant_id_set=...)],
  symbols_topologically_sorted=[
    'Reference to symbol Abstract'],
  verification_functions=[],
  verification_functions_by_name=...,
  meta_model=MetaModel(
    description=None,
    book_url='__book_url__',
    book_version='__book_version__'))