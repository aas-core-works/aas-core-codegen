SymbolTable(
  symbols=[
    Enumeration(
      name='Some_enum',
      literals=[
        EnumerationLiteral(
          name='some_literal',
          value='SomeLiteral',
          description=Description(
            document=...,
            node=...),
          parsed=...)],
      is_superset_of=[],
      description=Description(
        document=...,
        node=...),
      literals_by_name=...,
      literal_id_set=...,
      parsed=...),
    ConcreteClass(
      name='Reference',
      inheritances=[],
      inheritance_id_set=...,
      is_implementation_specific=False,
      interface=None,
      descendant_id_set=...,
      concrete_descendants=[],
      properties=[],
      methods=[],
      constructor=Constructor(
        name='__init__',
        arguments=[],
        returns=None,
        description=None,
        contracts=Contracts(
          preconditions=[],
          snapshots=[],
          postconditions=[]),
        parsed=None,
        arguments_by_name=...,
        is_implementation_specific=False,
        statements=[]),
      invariants=[],
      serialization=Serialization(
        with_model_type=False),
      description=None,
      parsed=...,
      properties_by_name=...,
      property_id_set=...,
      methods_by_name=...,
      invariant_id_set=...)],
  verification_functions=[],
  verification_functions_by_name=...,
  ref_association='Reference to ConcreteClass Reference',
  meta_model=MetaModel(
    description=None,
    book_url='__book_url__',
    book_version='__book_version__'))