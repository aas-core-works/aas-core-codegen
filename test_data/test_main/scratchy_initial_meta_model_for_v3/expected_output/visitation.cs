/*
 * This code has been automatically generated by aas-core-csharp-codegen.
 * Do NOT edit or append.
 */

namespace AasCore.Aas3
{
    static class Visitation
    {
        /// <summary>
        /// Define the interface for a visitor which visits the instances of the model.
        /// </summary>
        public interface IVisitor<T>
        {
            public T visit(IEntity entity);
            public T visit(LangString langString);
            public T visit(LangStringSet langStringSet);
            public T visit(Identifier identifier);
            public T visit(AdministrativeInformation administrativeInformation);
            public T visit(Key key);
            public T visit(Reference reference);
            public T visit(AssetAdministrationShell assetAdministrationShell);
        }  // public interface IVisitor

        /// <summary>
        /// Provide a visitor that returns nothing and iterates over all the instances.
        /// </summary>
        /// <remarks>
        /// The visitor is based on the double-dispatch using <see cref="IEntity.Accept"> method.
        ///
        /// While meaningless on its own, extending this visitor is helpful if you only want 
        /// to implement a subset of visit methods, but still want to preserve deep iteration.
        /// </remarks> 
        public interface VoidVisitor : IVisitor<void>
        {
            public void visit(IEntity entity)
            {
                // Dispatch
                entity.Accept(this);
            }
            public void visit(LangString langString)
            {
                // Do nothing, but descend
                foreach (var something in langString.DescendOnce())
                {
                    something.Accept(this);
                }
            }

            public void visit(LangStringSet langStringSet)
            {
                // Do nothing, but descend
                foreach (var something in langStringSet.DescendOnce())
                {
                    something.Accept(this);
                }
            }

            public void visit(Identifier identifier)
            {
                // Do nothing, but descend
                foreach (var something in identifier.DescendOnce())
                {
                    something.Accept(this);
                }
            }

            public void visit(AdministrativeInformation administrativeInformation)
            {
                // Do nothing, but descend
                foreach (var something in administrativeInformation.DescendOnce())
                {
                    something.Accept(this);
                }
            }

            public void visit(Key key)
            {
                // Do nothing, but descend
                foreach (var something in key.DescendOnce())
                {
                    something.Accept(this);
                }
            }

            public void visit(Reference reference)
            {
                // Do nothing, but descend
                foreach (var something in reference.DescendOnce())
                {
                    something.Accept(this);
                }
            }

            public void visit(AssetAdministrationShell assetAdministrationShell)
            {
                // Do nothing, but descend
                foreach (var something in assetAdministrationShell.DescendOnce())
                {
                    something.Accept(this);
                }
            }
        }  // public class VoidVisitor
    }  // static class Visitation
}  // namespace AasCore.Aas3

/*
 * This code has been automatically generated by aas-core-csharp-codegen.
 * Do NOT edit or append.
 */
