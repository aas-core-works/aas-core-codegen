/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */

package test.enhancing;

import java.lang.Iterable;
import java.util.Optional;
import java.util.List;
import test.visitation.IVisitor;
import test.visitation.IVisitorWithContext;
import test.visitation.ITransformer;
import test.visitation.ITransformerWithContext;
import test.types.enums.*;
import test.types.impl.*;
import test.types.model.*;

public class EnhancedListOfPrimitives<EnhancementT>
  extends Enhanced<EnhancementT>
  implements IListOfPrimitives {
  private final IListOfPrimitives instance;

  public EnhancedListOfPrimitives(
    IListOfPrimitives instance,
    EnhancementT enhancement
  ) {
    super(enhancement);
    this.instance = instance;
  }

  @Override
  public List<String> getStrings() {
    return instance.getStrings();
  }

  @Override
  public void setStrings(List<String> strings) {
    instance.setStrings(strings);
  }

  @Override
  public List<Long> getIntegers() {
    return instance.getIntegers();
  }

  @Override
  public void setIntegers(List<Long> integers) {
    instance.setIntegers(integers);
  }

  @Override
  public List<Boolean> getBooleans() {
    return instance.getBooleans();
  }

  @Override
  public void setBooleans(List<Boolean> booleans) {
    instance.setBooleans(booleans);
  }

  public Iterable<IClass> descendOnce() {
    return instance.descendOnce();
  }

  public Iterable<IClass> descend() {
    return instance.descend();
  }

  public void accept(IVisitor visitor) {
    visitor.visitListOfPrimitives(instance);
  }

  public <ContextT> void accept(
    IVisitorWithContext<ContextT> visitor,
    ContextT context
  ) {
    visitor.visitListOfPrimitives(instance, context);
  }

  public <T> T transform(ITransformer<T> transformer) {
    return transformer.transformListOfPrimitives(instance);
  }

  public <ContextT, T> T transform(
    ITransformerWithContext<ContextT, T> transformer,
    ContextT context
  ) {
    return transformer.transformListOfPrimitives(instance, context);
  }
}

/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */
