/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */

package aas_core.aas3_0.types.model;

import aas_core.aas3_0.types.enums.*;
import aas_core.aas3_0.types.impl.*;
import aas_core.aas3_0.types.model.*;
import java.util.List;
import aas_core.aas3_0.types.model.IIdentifiable;
import aas_core.aas3_0.types.model.IHasDataSpecification;
import java.util.Optional;

/**
 * The semantics of a property or other elements that may have a semantic description
 * is defined by a concept description.
 *
 * <p>The description of the concept should follow a standardized schema (realized as
 * data specification template).
 *
 * <p>Constraints:
 * <ul>
 *   <li> Constraint AASc-3a-004:
 *   For a {@link ConceptDescription} with {@link ConceptDescription#getCategory category} {@literal PROPERTY} or
 *   {@literal VALUE} using data specification IEC61360,
 *   the {@link DataSpecificationIec61360#getDataType dataType} is mandatory and shall be
 *   one of: {@literal DATE}, {@literal STRING}, {@literal STRING_TRANSLATABLE}, {@literal INTEGER_MEASURE},
 *   {@literal INTEGER_COUNT}, {@literal INTEGER_CURRENCY}, {@literal REAL_MEASURE}, {@literal REAL_COUNT},
 *   {@literal REAL_CURRENCY}, {@literal BOOLEAN}, {@literal RATIONAL}, {@literal RATIONAL_MEASURE},
 *   {@literal TIME}, {@literal TIMESTAMP}.
 *
 *   <p>Note: categories are deprecated since V3.0 of Part 1a of the document series
 *   "Details of the Asset Administration Shell".
 *   <li> Constraint AASc-3a-005:
 *   For a {@link ConceptDescription} with {@link ConceptDescription#getCategory category} {@literal REFERENCE}
 *   using data specification template IEC61360,
 *   the {@link DataSpecificationIec61360#getDataType dataType} shall be
 *   one of: {@literal STRING}, {@literal IRI}, {@literal IRDI}.
 *
 *   <p>Note: categories are deprecated since V3.0 of Part 1a of the document series
 *   "Details of the Asset Administration Shell".
 *   <li> Constraint AASc-3a-006:
 *   For a {@link ConceptDescription} with {@link ConceptDescription#getCategory category} {@literal DOCUMENT}
 *   using data specification IEC61360,
 *   the {@link DataSpecificationIec61360#getDataType dataType} shall be one of {@literal FILE},
 *   {@literal BLOB}, {@literal HTML}
 *
 *   <p>Categories are deprecated since V3.0 of Part 1a of the document series
 *   "Details of the Asset Administration Shell".
 *   <li> Constraint AASc-3a-007:
 *   For a {@link ConceptDescription} with {@link ConceptDescription#getCategory category} {@literal QUALIFIER_TYPE}
 *   using data specification IEC61360,
 *   the {@link DataSpecificationIec61360#getDataType dataType} is mandatory and shall be
 *   defined.
 *
 *   <p>Categories are deprecated since V3.0 of Part 1a of the document series
 *   "Details of the Asset Administration Shell".
 *   <li> Constraint AASc-3a-008:
 *   For a {@link ConceptDescription} using data specification template IEC61360,
 *   {@link DataSpecificationIec61360#getDefinition definition} is mandatory and shall be
 *   defined at least in English.
 *
 *   <p>Exception: The concept description describes a value, i.e.
 *   {@link DataSpecificationIec61360#getValue value} is defined.
 *   <li> Constraint AASc-3a-003:
 *   For a {@link ConceptDescription} using data specification template IEC61360,
 *   referenced via {@link DataSpecificationIec61360#getValueList valueList}
 *   {@link ValueReferencePair#getValueId valueId}
 *   the {@link DataSpecificationIec61360#getValue value} shall be set.
 * </ul>
 */

public interface IConceptDescription extends
    IIdentifiable,
    IHasDataSpecification {
  /**
   * Reference to an external definition the concept is compatible to or was derived
   * from.
   *
   * <p>It is recommended to use a global reference.
   *
   * <p>Compare to is-case-of relationship in ISO 13584-32 &amp; IEC EN 61360
   */
  Optional<List<IReference>> getIsCaseOf();

  void setIsCaseOf(List<IReference> isCaseOf);

  /**
   * Iterate over isCaseOf, if set, and otherwise return an empty enumerable.
   */
  Iterable<IReference> overIsCaseOfOrEmpty();
}

/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */
