/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */

package aas_core.aas3_0.types.model;

import aas_core.aas3_0.types.enums.*;
import aas_core.aas3_0.types.impl.*;
import aas_core.aas3_0.types.model.*;
import java.util.List;
import aas_core.aas3_0.types.model.IDataElement;
import java.util.Optional;

/**
 * A property is a data element that has a multi-language value.
 *
 * <p>Constraints:
 *
 * <ul>
 *   <li> Constraint AASd-012:
 *   If both the {@link #getValue()} and the {@link #getValueId()} are present then for each
 *   string in a specific language the meaning must be the same as specified in
 *   {@link #getValueId()}.
 * </ul>
 */
public interface IMultiLanguageProperty extends IDataElement {
  /**
   * The value of the property instance.
   */
  Optional<List<ILangStringTextType>> getValue();

  void setValue(List<ILangStringTextType> value);

  /**
   * Reference to the global unique ID of a coded value.
   *
   * <p>It is recommended to use a global reference.
   */
  Optional<IReference> getValueId();

  void setValueId(IReference valueId);

  /**
   * Iterate over value, if set, and otherwise return an empty enumerable.
   */
  Iterable<ILangStringTextType> overValueOrEmpty();
}

/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */
