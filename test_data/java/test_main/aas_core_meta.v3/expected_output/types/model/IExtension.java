/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */

package aas_core.aas3_0.types.model;

import aas_core.aas3_0.types.enums.*;
import aas_core.aas3_0.types.impl.*;
import aas_core.aas3_0.types.model.*;
import java.util.List;
import aas_core.aas3_0.types.model.IHasSemantics;
import java.util.Optional;

/**
 * Single extension of an element.
 */
public interface IExtension extends IHasSemantics {
  /**
   * Name of the extension.
   *
   * <p>Constraints:
   * <ul>
   *   <li> Constraint AASd-077:
   *   The name of an extension (Extension/name) within {@link IHasExtensions} needs
   *   to be unique.
   * </ul>
   */
  String getName();

  void setName(String name);

  /**
   * Type of the value of the extension.
   *
   * <p>Default: {@link DataTypeDefXsd#STRING}
   */
  Optional<DataTypeDefXsd> getValueType();

  void setValueType(DataTypeDefXsd valueType);

  /**
   * Value of the extension
   */
  Optional<String> getValue();

  void setValue(String value);

  /**
   * Reference to an element the extension refers to.
   */
  Optional<List<IReference>> getRefersTo();

  void setRefersTo(List<IReference> refersTo);

  DataTypeDefXsd valueTypeOrDefault();

  /**
   * Iterate over refersTo, if set, and otherwise return an empty enumerable.
   */
  Iterable<IReference> overRefersToOrEmpty();
}

/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */
