/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */

package aas_core.aas3_0.types.model;

import aas_core.aas3_0.types.enums.*;
import aas_core.aas3_0.types.impl.*;
import aas_core.aas3_0.types.model.*;
import java.util.List;
import aas_core.aas3_0.types.model.IClass;
import java.util.Optional;

/**
 * Container for the sets of different identifiables.
 *
 * <p>w.r.t. file exchange: There is exactly one environment independent on how many
 * files the contained elements are split. If the file is split then there
 * shall be no element with the same identifier in two different files.
 */
public interface IEnvironment extends IClass {
  /**
   * Asset administration shell
   */
  Optional<List<IAssetAdministrationShell>> getAssetAdministrationShells();

  void setAssetAdministrationShells(List<IAssetAdministrationShell> assetAdministrationShells);

  /**
   * Submodel
   */
  Optional<List<ISubmodel>> getSubmodels();

  void setSubmodels(List<ISubmodel> submodels);

  /**
   * Concept description
   */
  Optional<List<IConceptDescription>> getConceptDescriptions();

  void setConceptDescriptions(List<IConceptDescription> conceptDescriptions);

  /**
   * Iterate over assetAdministrationShells, if set, and otherwise return an empty enumerable.
   */
  Iterable<IAssetAdministrationShell> overAssetAdministrationShellsOrEmpty();

  /**
   * Iterate over submodels, if set, and otherwise return an empty enumerable.
   */
  Iterable<ISubmodel> overSubmodelsOrEmpty();

  /**
   * Iterate over conceptDescriptions, if set, and otherwise return an empty enumerable.
   */
  Iterable<IConceptDescription> overConceptDescriptionsOrEmpty();
}

/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */
