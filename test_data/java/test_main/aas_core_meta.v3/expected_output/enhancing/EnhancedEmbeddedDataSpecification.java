/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */

package aas_core.aas3_0.enhancing;

import java.lang.Iterable;
import java.util.Optional;
import java.util.List;
import aas_core.aas3_0.visitation.IVisitor;
import aas_core.aas3_0.visitation.IVisitorWithContext;
import aas_core.aas3_0.visitation.ITransformer;
import aas_core.aas3_0.visitation.ITransformerWithContext;
import aas_core.aas3_0.types.enums.*;
import aas_core.aas3_0.types.impl.*;
import aas_core.aas3_0.types.model.*;

public class EnhancedEmbeddedDataSpecification<EnhancementT>
  extends Enhanced<EnhancementT>
  implements IEmbeddedDataSpecification {
  private final IEmbeddedDataSpecification instance;

  public EnhancedEmbeddedDataSpecification(
    IEmbeddedDataSpecification instance,
    EnhancementT enhancement
  ) {
    super(enhancement);
    this.instance = instance;
  }

  @Override
  public IReference getDataSpecification() {
    return instance.getDataSpecification();
  }

  @Override
  public void setDataSpecification(IReference dataSpecification) {
    instance.setDataSpecification(dataSpecification);
  }

  @Override
  public IDataSpecificationContent getDataSpecificationContent() {
    return instance.getDataSpecificationContent();
  }

  @Override
  public void setDataSpecificationContent(IDataSpecificationContent dataSpecificationContent) {
    instance.setDataSpecificationContent(dataSpecificationContent);
  }

  public Iterable<IClass> descendOnce() {
    return instance.descendOnce();
  }

  public Iterable<IClass> descend() {
    return instance.descend();
  }

  public void accept(IVisitor visitor) {
    visitor.visitEmbeddedDataSpecification(instance);
  }

  public <ContextT> void accept(
    IVisitorWithContext<ContextT> visitor,
    ContextT context
  ) {
    visitor.visitEmbeddedDataSpecification(instance, context);
  }

  public <T> T transform(ITransformer<T> transformer) {
    return transformer.transformEmbeddedDataSpecification(instance);
  }

  public <ContextT, T> T transform(
    ITransformerWithContext<ContextT, T> transformer,
    ContextT context
  ) {
    return transformer.transformEmbeddedDataSpecification(instance, context);
  }
}

/*
 * This code has been automatically generated by aas-core-codegen.
 * Do NOT edit or append.
 */
